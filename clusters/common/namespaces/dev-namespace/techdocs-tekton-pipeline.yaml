apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: techdocs-tekton-pipeline
  labels:
    apps.tanzu.vmware.com/pipeline: techdocs     # (!) required
spec:
  params:
    - name: source-url                        # (!) required
    - name: source-revision                   # (!) required
    - name: component-name
    - name: techdocs-type                # (!) required

  tasks:
    - name: test
      params:
        - name: source-url
          value: $(params.source-url)
        - name: source-revision
          value: $(params.source-revision)
        - name: component-name
          value: $(params.component-name)
        - name: techdocs-type                # (!) required
          value: $(params.techdocs-type)
 
      taskSpec:
        params:
          - name: source-url
          - name: source-revision
          - name: component-name
          - name: techdocs-type 
        steps:
          - name: test
            image: registry.gcp.ellin.net/library/techdocs-builder
            script: |-
              #!/bin/sh
              TECHDOCS_S3_BUCKET_NAME=e2e-tap-appref-techdocs
              ENTITY_NAMESPACE=default
              ENTITY_KIND=component
              ENTITY_NAME=$(params.component-name)
              ENTITY_TYPE=$(params.techdocs-type)
              wget -qO- $(params.source-url) | tar xvz -m
              if [ -f 'mkdocs.yml' ]; then
                techdocs-cli generate --no-docker --verbose
                techdocs-cli publish --publisher-type awsS3 --storage-name $TECHDOCS_S3_BUCKET_NAME --entity $ENTITY_NAMESPACE/$ENTITY_KIND/$ENTITY_NAME
              else 
                echo "file does not exist."
              fi
              echo $ENTITY_TYPE